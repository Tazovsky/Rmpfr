\SweaveOpts{engine=R, keep.source=TRUE}
\SweaveOpts{eps=FALSE, pdf=TRUE, width=9, height=6, strip.white=true}
\setkeys{Gin}{width=\textwidth}

<<preliminaries, echo=FALSE, results=hide>>=
options(width=75)
try(Mlibrary(Rmpfr))
stopifnot(require("Rmpfr"))
@

\begin{frame}[fragile]\frametitle{Capabilities of \pkg{Rmpfr} -- a Glimpse}
  ``All'' \R arithmetic and math functions just work with ``mpfr''
  numbers:  \\
  Via \code{"Group"} S4 methods

<<some-groups>>=
getGroupMembers("Arith")
getGroupMembers("Compare")
getGroupMembers("Math")
@
\end{frame}

\begin{frame}[fragile]\frametitle{Capabilities of \pkg{Rmpfr} --- 2 ---}
  In addition to the basic arithmetic (including all \code{"Math"} functions!),
  based on the MPFR C library,
  \code{Rmpfr} provides arbitrarily precise versions of

  \begin{itemize}
  \item Bessel functions $j_n(x)$, $y_n(x)$, and $Ai(x)$
  \item Error functions \code{erf(x)}, and \code{erfc(x)}, or equivalently,\\
    \code{pnorm(x)} and \code{pnorm(x, lower.tail=FALSE)}.
  \item Riemann's $\zeta(x) = $\code{zeta(x)},
  \item Exponential integral \code{Ei(x)}
  \item Dilogarithm $\mathrm{Li}_2(x)=$\code{Li2(x)}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]\frametitle{Capabilities of \pkg{Rmpfr} --- 3 ---}
  \begin{itemize}
  \item Arbitarily precise numerical integration (via Romberg), via our
    \code{integrateR()}
    \item Arbitarily root finding (and hence numerical \emph{inverse} function),
      via \code{unirootR()}.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]\frametitle{High precision Matrices}
  Can also do simple arithmetic with \code{"mpfrMatrix"} and
  \code{"mpfrArray"} objects, e.g.
<<Matrix-ex>>=
head(x <- mpfr(0:7, 64)/7)
mx <- x ; dim(mx) <- c(4,2)
mx[ 1:3, ] + c(1,10,100)
@
\end{frame}

\begin{frame}[fragile]% \frametitle{High precision Matrices}
We can transpose or multiply such matrices, e.g.,
<<mxv>>=
t(mx) %*% 10^(1:4)
@
or
<<crossprod>>=
crossprod(mx)
@

\pause
\medskip

and apply works too :
<<apply>>=
(s7 <- apply(7 * mx, 2, sum))
@
\smallskip

and, note that \code{all.equal()} methods are provided, as well:
<<all.equal>>=
all.equal(s7, c(6,22), tol = 1e-40) # note the tolerance!
@
\end{frame}

%% ---------------------------------------------------------------------------

\section{Package and Session Information}
\begin{frame}[fragile]%\frametitle{High precision Matrices}
<<sessionInfo, results=tex>>=
toLatex(sessionInfo())
@
\end{frame}
%%
\begin{frame}[fragile]%\frametitle{....}
<<Rmpfr-ver-show>>=
packageDescription("Rmpfr")
@
%%---^^^^^^^ or somethings smarter with capture.output() or subsetting ...
my.strsplit(  [["LastChanged"]]  )
\end{frame}

@

%%% TeX-master: "Maechler_Rmpfr.tex"
